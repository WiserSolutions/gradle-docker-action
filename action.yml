name: Build & Publish 
description: 
inputs:
  ECR_REGISTRY:
    description: 'Registry to push images to'
    required: true
  ECR_REPO:  
    description: 'Repo (must already exist in the Registry )'
    required: true
  AUTH_USER:
    description: 'Username, defaults to AWS'
    required: false
    default: AWS
  AUTH_TOKEN: 
    description: 'Authentication Token for the Repository'
    required: true
  IMAGE_TAG:
    description: 'Tag(s) for docker image'
    reqired: true
  
outputs:
  random-number: 
    description: Status for now
    value: 'OK'

runs:
  using: "composite"
  steps:
    - run: chmod +x ./gradlew && ./gradlew bootJar
      shell: bash
    - id: build-image
      run: |
        # Build a docker container and
        # push it to ECR
        echo "${{ inputs.AUTH_TOKEN}}" | docker login -u ${{ inputs.AUTH_USE}} --password-stdin ${{ inputs.ECR_REGISTRY}}
        docker build -t ${{inputs.ECR_REGISTRY}}/${{inputs.ECR_REPO}}:${{inputs.IMAGE_TAG}} .
        docker push ${{inputs.ECR_REGISTRY}}/${{inputs.ECR_REPO}}:${{inputs.IMAGE_TAG}}
        echo "::set-output name=image::${{inputs.ECR_REGISTRY}}/${{inputs.ECR_REPO}}:${{inputs.IMAGE_TAG}}"
        echo "::set-output TAG=${{inputs.IMAGE_TAG}}"
      shell: bash
